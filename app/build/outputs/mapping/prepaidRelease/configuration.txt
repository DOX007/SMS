# The proguard configuration file for the following section is /home/alexander/Desktop/SMS/app/build/intermediates/aapt_proguard_file/prepaidRelease/processPrepaidReleaseResources/aapt_rules.txt
-keep class androidx.core.app.CoreComponentFactory { <init>(); }
-keep class androidx.core.content.FileProvider { <init>(); }
-keep class androidx.profileinstaller.ProfileInstallReceiver { <init>(); }
-keep class androidx.room.MultiInstanceInvalidationService { <init>(); }
-keep class androidx.startup.InitializationProvider { <init>(); }
-keep class com.android.mms.transaction.PushReceiver { <init>(); }
-keep class com.android.mms.transaction.TransactionService { <init>(); }
-keep class com.klinker.android.send_message.MmsFileProvider { <init>(); }
-keep class com.simplemobiletools.commons.activities.AboutActivity { <init>(); }
-keep class com.simplemobiletools.commons.activities.ContributorsActivity { <init>(); }
-keep class com.simplemobiletools.commons.activities.CustomizationActivity { <init>(); }
-keep class com.simplemobiletools.commons.activities.FAQActivity { <init>(); }
-keep class com.simplemobiletools.commons.activities.LicenseActivity { <init>(); }
-keep class com.simplemobiletools.commons.activities.ManageBlockedNumbersActivity { <init>(); }
-keep class com.simplemobiletools.commons.receivers.SharedThemeReceiver { <init>(); }
-keep class com.simplemobiletools.smsmessenger.App { <init>(); }
-keep class com.simplemobiletools.smsmessenger.activities.ArchivedConversationsActivity { <init>(); }
-keep class com.simplemobiletools.smsmessenger.activities.ConversationDetailsActivity { <init>(); }
-keep class com.simplemobiletools.smsmessenger.activities.MainActivity { <init>(); }
-keep class com.simplemobiletools.smsmessenger.activities.ManageBlockedKeywordsActivity { <init>(); }
-keep class com.simplemobiletools.smsmessenger.activities.NewConversationActivity { <init>(); }
-keep class com.simplemobiletools.smsmessenger.activities.RecycleBinConversationsActivity { <init>(); }
-keep class com.simplemobiletools.smsmessenger.activities.SettingsActivity { <init>(); }
-keep class com.simplemobiletools.smsmessenger.activities.SplashActivity { <init>(); }
-keep class com.simplemobiletools.smsmessenger.activities.ThreadActivity { <init>(); }
-keep class com.simplemobiletools.smsmessenger.activities.VCardViewerActivity { <init>(); }
-keep class com.simplemobiletools.smsmessenger.receivers.DeleteSmsReceiver { <init>(); }
-keep class com.simplemobiletools.smsmessenger.receivers.DirectReplyReceiver { <init>(); }
-keep class com.simplemobiletools.smsmessenger.receivers.MarkAsReadReceiver { <init>(); }
-keep class com.simplemobiletools.smsmessenger.receivers.MmsReceiver { <init>(); }
-keep class com.simplemobiletools.smsmessenger.receivers.MmsSentReceiver { <init>(); }
-keep class com.simplemobiletools.smsmessenger.receivers.ScheduledMessageReceiver { <init>(); }
-keep class com.simplemobiletools.smsmessenger.receivers.SmsReceiver { <init>(); }
-keep class com.simplemobiletools.smsmessenger.receivers.SmsStatusDeliveredReceiver { <init>(); }
-keep class com.simplemobiletools.smsmessenger.receivers.SmsStatusSentReceiver { <init>(); }
-keep class com.simplemobiletools.smsmessenger.services.HeadlessSmsSendService { <init>(); }
-keep class android.widget.Space { <init>(android.content.Context, android.util.AttributeSet); }

-keep class android.widget.TextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.app.AlertController$RecycleListView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ActionMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ExpandedMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ListMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarContainer { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarContextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarOverlayLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActivityChooserView$InnerLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.AlertDialogLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.AppCompatImageView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.AppCompatTextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ButtonBarLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ContentFrameLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.DialogTitle { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.FitWindowsFrameLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.FitWindowsLinearLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.SearchView$SearchAutoComplete { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.Toolbar { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ViewStubCompat { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.helper.widget.Flow { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.widget.Barrier { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.widget.ConstraintLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.core.widget.NestedScrollView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.fragment.app.FragmentContainerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.recyclerview.widget.RecyclerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.andrognito.patternlockview.PatternLockView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.appbar.AppBarLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.appbar.MaterialToolbar { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.button.MaterialButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.button.MaterialButtonToggleGroup { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.chip.Chip { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.datepicker.MaterialCalendarGridView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.imageview.ShapeableImageView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.BaselineLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.CheckableImageButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.ClippableRoundedCornerLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.NavigationMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.NavigationMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.TouchObserverFrameLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.progressindicator.CircularProgressIndicator { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.progressindicator.LinearProgressIndicator { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.snackbar.Snackbar$SnackbarLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.snackbar.SnackbarContentLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.tabs.TabItem { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.tabs.TabLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.textfield.TextInputEditText { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.textfield.TextInputLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.ChipTextInputComboView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.ClockFaceView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.ClockHandView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.TimePickerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.qtalk.recyclerviewfastscroller.RecyclerViewFastScroller { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.reddit.indicatorfastscroll.FastScrollerThumbView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.reddit.indicatorfastscroll.FastScrollerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.BiometricIdTab { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.Breadcrumbs { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.ColorPickerSquare { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.FingerprintTab { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.LineColorPicker { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.MyAppCompatCheckbox { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.MyAutoCompleteTextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.MyButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.MyCompatRadioButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.MyDialogViewPager { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.MyEditText { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.MyFloatingActionButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.MyRecyclerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.MyScrollView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.MySearchMenu { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.MySquareImageView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.MyTextInputLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.MyTextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.MyViewPager { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.PatternTab { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.PinTab { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.RenamePatternTab { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.simplemobiletools.commons.views.RenameSimpleTab { <init>(android.content.Context, android.util.AttributeSet); }


# End of content from /home/alexander/Desktop/SMS/app/build/intermediates/aapt_proguard_file/prepaidRelease/processPrepaidReleaseResources/aapt_rules.txt
# The proguard configuration file for the following section is /home/alexander/Desktop/SMS/app/build/intermediates/default_proguard_files/global/proguard-android-optimize.txt-8.9.2
# This is a configuration file for ProGuard.
# http://proguard.sourceforge.net/index.html#manual/usage.html
#
# Starting with version 2.2 of the Android plugin for Gradle, this file is distributed together with
# the plugin and unpacked at build-time. The files in $ANDROID_HOME are no longer maintained and
# will be ignored by new version of the Android plugin for Gradle.

# Optimizations: If you don't want to optimize, use the proguard-android.txt configuration file
# instead of this one, which turns off the optimization flags.
-allowaccessmodification

# Preserve some attributes that may be required for reflection.
-keepattributes AnnotationDefault,
                EnclosingMethod,
                InnerClasses,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations,
                Signature

-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService
-keep public class com.google.android.vending.licensing.ILicensingService
-dontnote com.android.vending.licensing.ILicensingService
-dontnote com.google.vending.licensing.ILicensingService
-dontnote com.google.android.vending.licensing.ILicensingService

# For native methods, see https://www.guardsquare.com/manual/configuration/examples#native
-keepclasseswithmembernames,includedescriptorclasses class * {
    native <methods>;
}

# Keep setters in Views so that animations can still work.
-keepclassmembers public class * extends android.view.View {
    void set*(***);
    *** get*();
}

# We want to keep methods in Activity that could be used in the XML attribute onClick.
-keepclassmembers class * extends android.app.Activity {
    public void *(android.view.View);
}

# For enumeration classes, see https://www.guardsquare.com/manual/configuration/examples#enumerations
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keepclassmembers class * implements android.os.Parcelable {
    public static final ** CREATOR;
}

# Preserve annotated Javascript interface methods.
-keepclassmembers class * {
    @android.webkit.JavascriptInterface <methods>;
}

# The support libraries contains references to newer platform versions.
# Don't warn about those in case this app is linking against an older
# platform version. We know about them, and they are safe.
-dontnote android.support.**
-dontnote androidx.**
-dontwarn android.support.**
-dontwarn androidx.**

# Understand the @Keep support annotation.
-keep class android.support.annotation.Keep

-keep @android.support.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <init>(...);
}

# These classes are duplicated between android.jar and org.apache.http.legacy.jar.
-dontnote org.apache.http.**
-dontnote android.net.http.**

# These classes are duplicated between android.jar and core-lambda-stubs.jar.
-dontnote java.lang.invoke.**

# End of content from /home/alexander/Desktop/SMS/app/build/intermediates/default_proguard_files/global/proguard-android-optimize.txt-8.9.2
# The proguard configuration file for the following section is /home/alexander/Desktop/SMS/app/proguard-rules.pro
# EventBus
-keepattributes *Annotation*
-keepclassmembers class ** {
    @org.greenrobot.eventbus.Subscribe <methods>;
}
-keep enum org.greenrobot.eventbus.ThreadMode { *; }

# Keep `Companion` object fields of serializable classes.
# This avoids serializer lookup through `getDeclaredClasses` as done for named companion objects.
-if @kotlinx.serialization.Serializable class **
-keepclassmembers class <1> {
    static <1>$Companion Companion;
}

# Keep `serializer()` on companion objects (both default and named) of serializable classes.
-if @kotlinx.serialization.Serializable class ** {
    static **$* *;
}
-keepclassmembers class <2>$<3> {
    kotlinx.serialization.KSerializer serializer(...);
}

# Keep `INSTANCE.serializer()` of serializable objects.
-if @kotlinx.serialization.Serializable class ** {
    public static ** INSTANCE;
}
-keepclassmembers class <1> {
    public static <1> INSTANCE;
    kotlinx.serialization.KSerializer serializer(...);
}

# Gson
-keep class com.simplemobiletools.commons.models.SimpleContact { *; }
-keep class com.simplemobiletools.smsmessenger.models.Attachment { *; }
-keep class com.simplemobiletools.smsmessenger.models.MessageAttachment { *; }

# End of content from /home/alexander/Desktop/SMS/app/proguard-rules.pro
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/e718f22605cd5f4c69b6393d6c367fdd/transformed/jetified-Simple-Commons-b72ded2a75/proguard.txt
-renamesourcefileattribute SourceFile
-keepattributes SourceFile, LineNumberTable

-dontwarn com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool
-dontwarn com.bumptech.glide.load.resource.bitmap.Downsampler
-dontwarn com.bumptech.glide.load.resource.bitmap.HardwareConfigState
-dontwarn com.bumptech.glide.manager.RequestManagerRetriever

-keep public class * extends java.lang.Exception

-keep class android.support.v7.widget.SearchView { *; }
-keep class com.simplemobiletools.commons.models.PhoneNumber { *; }

# Joda
-dontwarn org.joda.convert.**
-dontwarn org.joda.time.**
-keep class org.joda.time.** { *; }
-keep interface org.joda.time.** { *; }

-keep public class * implements com.bumptech.glide.module.GlideModule
-keep public class * extends com.bumptech.glide.module.AppGlideModule
-keep class com.bumptech.glide.GeneratedAppGlideModuleImpl
-keep public enum com.bumptech.glide.load.ImageHeaderParser$** {
  **[] $VALUES;
  public *;
}
-dontwarn java.lang.invoke.StringConcatFactory
-dontwarn javax.swing.tree.TreeNode

#Gson https://github.com/google/gson/blob/main/gson/src/main/resources/META-INF/proguard/gson.pro
-keepattributes Signature
-keepattributes RuntimeVisibleAnnotations,AnnotationDefault

-if class com.google.gson.reflect.TypeToken
-keep,allowobfuscation class com.google.gson.reflect.TypeToken

-keep,allowobfuscation class * extends com.google.gson.reflect.TypeToken
-keep,allowobfuscation,allowoptimization @com.google.gson.annotations.JsonAdapter class *

-keepclassmembers,allowobfuscation class * {
  @com.google.gson.annotations.Expose <fields>;
  @com.google.gson.annotations.JsonAdapter <fields>;
  @com.google.gson.annotations.Since <fields>;
  @com.google.gson.annotations.Until <fields>;
}

-keepclassmembers class * extends com.google.gson.TypeAdapter {
  <init>();
}
-keepclassmembers class * implements com.google.gson.TypeAdapterFactory {
  <init>();
}
-keepclassmembers class * implements com.google.gson.JsonSerializer {
  <init>();
}
-keepclassmembers class * implements com.google.gson.JsonDeserializer {
  <init>();
}

-if class *
-keepclasseswithmembers,allowobfuscation class <1> {
  @com.google.gson.annotations.SerializedName <fields>;
}
-if class * {
  @com.google.gson.annotations.SerializedName <fields>;
}
-keepclassmembers,allowobfuscation,allowoptimization class <1> {
  <init>();
}

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/e718f22605cd5f4c69b6393d6c367fdd/transformed/jetified-Simple-Commons-b72ded2a75/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/49f046b0589dce8ff03dc3cf8af10727/transformed/material-1.9.0/proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior
-keepattributes RuntimeVisible*Annotation*

# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# AppCompatViewInflater reads the viewInflaterClass theme attribute which then
# reflectively instantiates MaterialComponentsViewInflater using the no-argument
# constructor. We only need to keep this constructor and the class name if
# AppCompatViewInflater is also being kept.
-if class androidx.appcompat.app.AppCompatViewInflater
-keep class com.google.android.material.theme.MaterialComponentsViewInflater {
    <init>();
}


# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/49f046b0589dce8ff03dc3cf8af10727/transformed/material-1.9.0/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/357dbbeb55d661c36a4129cb2226b42e/transformed/biometric-1.2.0-alpha05/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking
        class androidx.biometric.AuthenticationCallbackProvider$Api* {
    <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking
        class androidx.biometric.BiometricFragment$Api* {
    <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking
        class androidx.biometric.BiometricManager$Api* {
    <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking
        class androidx.biometric.CancellationSignalProvider$Api* {
    <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking
        class androidx.biometric.CryptoObjectUtils$Api* {
    <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking
        class androidx.biometric.FingerprintDialogFragment$Api* {
    <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking
        class androidx.biometric.KeyguardUtils$Api* {
    <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking
        class androidx.biometric.PackageUtils$Api* {
    <methods>;
}

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/357dbbeb55d661c36a4129cb2226b42e/transformed/biometric-1.2.0-alpha05/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/6531576bc16e2da6c7df03f591a9e1b4/transformed/jetified-tests-2cb206415d/proguard.txt

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/6531576bc16e2da6c7df03f591a9e1b4/transformed/jetified-tests-2cb206415d/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/c1a1752fc803df7b9c3fe8631b3c3d68/transformed/jetified-core-2cb206415d/proguard.txt
-keep class com.github.ajalt.reprint.module.** { *; }

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/c1a1752fc803df7b9c3fe8631b3c3d68/transformed/jetified-core-2cb206415d/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/44d545d67f1eafb9722bba96a70f1e29/transformed/appcompat-1.6.1/proguard.txt
# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# aapt is not able to read app::actionViewClass and app:actionProviderClass to produce proguard
# keep rules. Add a commonly used SearchView to the keep list until b/109831488 is resolved.
-keep class androidx.appcompat.widget.SearchView { <init>(...); }

# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl* {
  <methods>;
}

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/44d545d67f1eafb9722bba96a70f1e29/transformed/appcompat-1.6.1/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/7ffeca9f5860122279c564d92acda06c/transformed/jetified-glide-4.16.0/proguard.txt
-keep public class * implements com.bumptech.glide.module.GlideModule
-keep class * extends com.bumptech.glide.module.AppGlideModule {
 <init>(...);
}
-keep public enum com.bumptech.glide.load.ImageHeaderParser$** {
  **[] $VALUES;
  public *;
}
-keep class com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder {
  *** rewind();
}

# Uncomment for DexGuard only
#-keepresourcexmlelements manifest/application/meta-data@value=GlideModule

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/7ffeca9f5860122279c564d92acda06c/transformed/jetified-glide-4.16.0/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/a1d2cebda7c4d1cd4ecfc7546b61ff1b/transformed/fragment-1.3.6/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The default FragmentFactory creates Fragment instances using reflection
-if public class ** extends androidx.fragment.app.Fragment
-keepclasseswithmembers,allowobfuscation public class <1> {
    public <init>();
}

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/a1d2cebda7c4d1cd4ecfc7546b61ff1b/transformed/fragment-1.3.6/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/eb2b096c5af2b1b50b1eec1b3f8a0b40/transformed/jetified-savedstate-1.2.1/proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

-keepclassmembers,allowobfuscation class * implements androidx.savedstate.SavedStateRegistry$AutoRecreated {
    <init>();
}

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/eb2b096c5af2b1b50b1eec1b3f8a0b40/transformed/jetified-savedstate-1.2.1/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/fa4499d9a6ba21fdbc4051830915e8db/transformed/jetified-lifecycle-viewmodel-savedstate-2.7.0-alpha02/proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>(androidx.lifecycle.SavedStateHandle);
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application,androidx.lifecycle.SavedStateHandle);
}

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/fa4499d9a6ba21fdbc4051830915e8db/transformed/jetified-lifecycle-viewmodel-savedstate-2.7.0-alpha02/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/c8935785bdf518a3ba611961e90ab382/transformed/lifecycle-viewmodel-2.7.0-alpha02/proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>();
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application);
}

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/c8935785bdf518a3ba611961e90ab382/transformed/lifecycle-viewmodel-2.7.0-alpha02/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/fb7c155fb2a5acc6b19be093c0a8c3f4/transformed/recyclerview-1.2.1/proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# When layoutManager xml attribute is used, RecyclerView inflates
#LayoutManagers' constructors using reflection.
-keep public class * extends androidx.recyclerview.widget.RecyclerView$LayoutManager {
    public <init>(android.content.Context, android.util.AttributeSet, int, int);
    public <init>();
}

-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
    public void suppressLayout(boolean);
    public boolean isLayoutSuppressed();
}
# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/fb7c155fb2a5acc6b19be093c0a8c3f4/transformed/recyclerview-1.2.1/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/1fd4cf0299ff39d75ae3c154bebff377/transformed/coordinatorlayout-1.1.0/proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior and ViewPager's DecorView
-keepattributes *Annotation*

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/1fd4cf0299ff39d75ae3c154bebff377/transformed/coordinatorlayout-1.1.0/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/63f3cad3c2109c827eefb196bc835cb3/transformed/transition-1.2.0/proguard.txt
# Copyright (C) 2017 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep a field in transition that is used to keep a reference to weakly-referenced object
-keepclassmembers class androidx.transition.ChangeBounds$* extends android.animation.AnimatorListenerAdapter {
  androidx.transition.ChangeBounds$ViewBounds mViewBounds;
}

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/63f3cad3c2109c827eefb196bc835cb3/transformed/transition-1.2.0/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/25df0ab0f59f67902f530549cea0a35e/transformed/vectordrawable-animated-1.1.0/proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# keep setters in VectorDrawables so that animations can still work.
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$* {
   void set*(***);
   *** get*();
}

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/25df0ab0f59f67902f530549cea0a35e/transformed/vectordrawable-animated-1.1.0/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/b804974cfb3ea823ef2d16ce31949614/transformed/core-1.12.0/proguard.txt
# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.ViewCompat$Api* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.WindowInsetsCompat$*Impl* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.app.NotificationCompat$*$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.os.UserHandleCompat$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.widget.EdgeEffectCompat$Api*Impl {
  <methods>;
}

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/b804974cfb3ea823ef2d16ce31949614/transformed/core-1.12.0/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/1cb9afdb6c0e4134a7291d58f4fc8c3b/transformed/lifecycle-runtime-2.7.0-alpha02/proguard.txt
-keepattributes AnnotationDefault,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations

-keepclassmembers enum androidx.lifecycle.Lifecycle$Event {
    <fields>;
}

-keep class * implements androidx.lifecycle.GeneratedAdapter {
    <init>(...);
}

-keepclassmembers class ** {
    @androidx.lifecycle.OnLifecycleEvent *;
}

# this rule is need to work properly when app is compiled with api 28, see b/142778206
# Also this rule prevents registerIn from being inlined.
-keepclassmembers class androidx.lifecycle.ReportFragment$LifecycleCallbacks { *; }
# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/1cb9afdb6c0e4134a7291d58f4fc8c3b/transformed/lifecycle-runtime-2.7.0-alpha02/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/6ed433e48d5e535e26e1f94c61b9139e/transformed/jetified-lifecycle-process-2.7.0-alpha02/proguard.txt
# this rule is need to work properly when app is compiled with api 28, see b/142778206
-keepclassmembers class * extends androidx.lifecycle.EmptyActivityLifecycleCallbacks { *; }
# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/6ed433e48d5e535e26e1f94c61b9139e/transformed/jetified-lifecycle-process-2.7.0-alpha02/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/89e653e019c93a08b3d952f8efa83ac0/transformed/jetified-ui-release/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# We supply these as stubs and are able to link to them at runtime
# because they are hidden public classes in Android. We don't want
# R8 to complain about them not being there during optimization.
-dontwarn android.view.RenderNode
-dontwarn android.view.DisplayListCanvas

-keepclassmembers class androidx.compose.ui.platform.ViewLayerContainer {
    protected void dispatchGetDisplayList();
}

-keepclassmembers class androidx.compose.ui.platform.AndroidComposeView {
    android.view.View findViewByAccessibilityIdTraversal(int);
}

# Users can create Modifier.Node instances that implement multiple Modifier.Node interfaces,
# so we cannot tell whether two modifier.node instances are of the same type without using
# reflection to determine the class type. See b/265188224 for more context.
-keep,allowshrinking class * extends androidx.compose.ui.node.ModifierNodeElement

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/89e653e019c93a08b3d952f8efa83ac0/transformed/jetified-ui-release/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/7255b18f42ec40a32f2f2ddb8d9060cd/transformed/room-runtime-2.6.0-rc01/proguard.txt
-keep class * extends androidx.room.RoomDatabase
-dontwarn androidx.room.paging.**
-dontwarn androidx.lifecycle.LiveData

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/7255b18f42ec40a32f2f2ddb8d9060cd/transformed/room-runtime-2.6.0-rc01/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/7df272d06915e3fe764c6d4a3949b16f/transformed/jetified-runtime-release/proguard.txt
-assumenosideeffects public class androidx.compose.runtime.ComposerKt {
    void sourceInformation(androidx.compose.runtime.Composer,java.lang.String);
    void sourceInformationMarkerStart(androidx.compose.runtime.Composer,int,java.lang.String);
    void sourceInformationMarkerEnd(androidx.compose.runtime.Composer);
}

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/7df272d06915e3fe764c6d4a3949b16f/transformed/jetified-runtime-release/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/9e3c1a37eccf1f75a556f82d1bd8bcc6/transformed/rules/lib/META-INF/com.android.tools/r8/coroutines.pro
# When editing this file, update the following files as well:
# - META-INF/proguard/coroutines.pro
# - META-INF/com.android.tools/proguard/coroutines.pro

# Most of volatile fields are updated with AFU and should not be mangled
-keepclassmembers class kotlinx.coroutines.** {
    volatile <fields>;
}

# Same story for the standard library's SafeContinuation that also uses AtomicReferenceFieldUpdater
-keepclassmembers class kotlin.coroutines.SafeContinuation {
    volatile <fields>;
}

# These classes are only required by kotlinx.coroutines.debug.AgentPremain, which is only loaded when
# kotlinx-coroutines-core is used as a Java agent, so these are not needed in contexts where ProGuard is used.
-dontwarn java.lang.instrument.ClassFileTransformer
-dontwarn sun.misc.SignalHandler
-dontwarn java.lang.instrument.Instrumentation
-dontwarn sun.misc.Signal

# Only used in `kotlinx.coroutines.internal.ExceptionsConstructor`.
# The case when it is not available is hidden in a `try`-`catch`, as well as a check for Android.
-dontwarn java.lang.ClassValue

# An annotation used for build tooling, won't be directly accessed.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/9e3c1a37eccf1f75a556f82d1bd8bcc6/transformed/rules/lib/META-INF/com.android.tools/r8/coroutines.pro
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/3413fa3456587189830e260602dc14da/transformed/rules/lib/META-INF/com.android.tools/r8-from-1.6.0/coroutines.pro
# Allow R8 to optimize away the FastServiceLoader.
# Together with ServiceLoader optimization in R8
# this results in direct instantiation when loading Dispatchers.Main
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatcherLoader {
    boolean FAST_SERVICE_LOADER_ENABLED return false;
}

-assumenosideeffects class kotlinx.coroutines.internal.FastServiceLoaderKt {
    boolean ANDROID_DETECTED return true;
}

# Disable support for "Missing Main Dispatcher", since we always have Android main dispatcher
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatchersKt {
    boolean SUPPORT_MISSING return false;
}

# Statically turn off all debugging facilities and assertions
-assumenosideeffects class kotlinx.coroutines.DebugKt {
    boolean getASSERTIONS_ENABLED() return false;
    boolean getDEBUG() return false;
    boolean getRECOVER_STACK_TRACES() return false;
}

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/3413fa3456587189830e260602dc14da/transformed/rules/lib/META-INF/com.android.tools/r8-from-1.6.0/coroutines.pro
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/12731ea4a5a5ae217fd87022cdfcc951/transformed/jetified-eventbus-3.3.1/proguard.txt
-keepattributes *Annotation*
-keepclassmembers class * {
    @org.greenrobot.eventbus.Subscribe <methods>;
}
-keep enum org.greenrobot.eventbus.ThreadMode { *; }

# If using AsyncExecutord, keep required constructor of default event used.
# Adjust the class name if a custom failure event type is used.
-keepclassmembers class org.greenrobot.eventbus.util.ThrowableFailureEvent {
    <init>(java.lang.Throwable);
}

# Accessed via reflection, avoid renaming or removal
-keep class org.greenrobot.eventbus.android.AndroidComponentsImpl

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/12731ea4a5a5ae217fd87022cdfcc951/transformed/jetified-eventbus-3.3.1/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/206e0393a37480122afdfc52ea32a9d0/transformed/jetified-ShortcutBadger-1.1.22/proguard.txt
#https://github.com/leolin310148/ShortcutBadger/issues/46
-keep class me.leolin.shortcutbadger.impl.AdwHomeBadger { <init>(...); }
-keep class me.leolin.shortcutbadger.impl.ApexHomeBadger { <init>(...); }
-keep class me.leolin.shortcutbadger.impl.AsusHomeLauncher { <init>(...); }
-keep class me.leolin.shortcutbadger.impl.DefaultBadger { <init>(...); }
-keep class me.leolin.shortcutbadger.impl.NewHtcHomeBadger { <init>(...); }
-keep class me.leolin.shortcutbadger.impl.NovaHomeBadger { <init>(...); }
-keep class me.leolin.shortcutbadger.impl.SolidHomeBadger { <init>(...); }
-keep class me.leolin.shortcutbadger.impl.SonyHomeBadger { <init>(...); }
-keep class me.leolin.shortcutbadger.impl.XiaomiHomeBadger { <init>(...); }
# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/206e0393a37480122afdfc52ea32a9d0/transformed/jetified-ShortcutBadger-1.1.22/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/7db6f511b6c890259a702df4a4fbbdfc/transformed/rules/lib/META-INF/com.android.tools/r8/kotlinx-serialization-common.pro
# Keep `Companion` object fields of serializable classes.
# This avoids serializer lookup through `getDeclaredClasses` as done for named companion objects.
-if @kotlinx.serialization.Serializable class **
-keepclassmembers class <1> {
    static <1>$Companion Companion;
}

# Keep `serializer()` on companion objects (both default and named) of serializable classes.
-if @kotlinx.serialization.Serializable class ** {
    static **$* *;
}
-keepclassmembers class <2>$<3> {
    kotlinx.serialization.KSerializer serializer(...);
}

# Keep `INSTANCE.serializer()` of serializable objects.
-if @kotlinx.serialization.Serializable class ** {
    public static ** INSTANCE;
}
-keepclassmembers class <1> {
    public static <1> INSTANCE;
    kotlinx.serialization.KSerializer serializer(...);
}

# @Serializable and @Polymorphic are used at runtime for polymorphic serialization.
-keepattributes RuntimeVisibleAnnotations,AnnotationDefault

# Don't print notes about potential mistakes or omissions in the configuration for kotlinx-serialization classes
# See also https://github.com/Kotlin/kotlinx.serialization/issues/1900
-dontnote kotlinx.serialization.**

# Serialization core uses `java.lang.ClassValue` for caching inside these specified classes.
# If there is no `java.lang.ClassValue` (for example, in Android), then R8/ProGuard will print a warning.
# However, since in this case they will not be used, we can disable these warnings
-dontwarn kotlinx.serialization.internal.ClassValueReferences

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/7db6f511b6c890259a702df4a4fbbdfc/transformed/rules/lib/META-INF/com.android.tools/r8/kotlinx-serialization-common.pro
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/7db6f511b6c890259a702df4a4fbbdfc/transformed/rules/lib/META-INF/com.android.tools/r8/kotlinx-serialization-r8.pro
# Rule to save runtime annotations on serializable class.
# If the R8 full mode is used, annotations are removed from classes-files.
#
# For the annotation serializer, it is necessary to read the `Serializable` annotation inside the serializer<T>() function - if it is present,
# then `SealedClassSerializer` is used, if absent, then `PolymorphicSerializer'.
#
# When using R8 full mode, all interfaces will be serialized using `PolymorphicSerializer`.
#
# see https://github.com/Kotlin/kotlinx.serialization/issues/2050

 -if @kotlinx.serialization.Serializable class **
 -keep, allowshrinking, allowoptimization, allowobfuscation, allowaccessmodification class <1>

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/7db6f511b6c890259a702df4a4fbbdfc/transformed/rules/lib/META-INF/com.android.tools/r8/kotlinx-serialization-r8.pro
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/9296dc2fc8f7087da8196227f30c2b9a/transformed/jetified-startup-runtime-1.1.1/proguard.txt
# It's important that we preserve initializer names, given they are used in the AndroidManifest.xml.
-keepnames class * extends androidx.startup.Initializer

# These Proguard rules ensures that ComponentInitializers are are neither shrunk nor obfuscated,
# and are a part of the primary dex file. This is because they are discovered and instantiated
# during application startup.
-keep class * extends androidx.startup.Initializer {
    # Keep the public no-argument constructor while allowing other methods to be optimized.
    <init>();
}

-assumenosideeffects class androidx.startup.StartupLogger { public static <methods>; }

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/9296dc2fc8f7087da8196227f30c2b9a/transformed/jetified-startup-runtime-1.1.1/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/8587c69ff915fd65e76b6bdfbe02bf23/transformed/versionedparcelable-1.1.1/proguard.txt
-keep class * implements androidx.versionedparcelable.VersionedParcelable
-keep public class android.support.**Parcelizer { *; }
-keep public class androidx.**Parcelizer { *; }
-keep public class androidx.versionedparcelable.ParcelImpl

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/8587c69ff915fd65e76b6bdfbe02bf23/transformed/versionedparcelable-1.1.1/proguard.txt
# The proguard configuration file for the following section is /home/alexander/.gradle/caches/8.11.1/transforms/e7133be798285c5b0aa4abc6058a01b2/transformed/rules/lib/META-INF/proguard/androidx-annotations.pro
-keep,allowobfuscation @interface androidx.annotation.Keep
-keep @androidx.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <init>(...);
}

-keepclassmembers,allowobfuscation class * {
  @androidx.annotation.DoNotInline <methods>;
}

# End of content from /home/alexander/.gradle/caches/8.11.1/transforms/e7133be798285c5b0aa4abc6058a01b2/transformed/rules/lib/META-INF/proguard/androidx-annotations.pro
# The proguard configuration file for the following section is <unknown>

# End of content from <unknown>